name: 'master_build'
on:
  push:
    branches: [ master ]

env:
  MAVEN_OPTS: -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn

jobs:
  build_job:
    runs-on: ubuntu-latest
    name: Build & Test Microservice
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up JDK 21
        uses: actions/setup-java@v1
        with:
          java-version: 21
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Check version
        if: github.event_name != 'pull_request'
        id: version-check
        run: |
          VERSION=$(./mvnw help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "Project version: $VERSION"
          if [[ "$VERSION" =~ -SNAPSHOT$ ]]; then
            echo "⚠️ Version is snapshot: $VERSION - skipping publish"
            echo "should_publish=false" >> $GITHUB_OUTPUT
            VERSION=latest
          else
            echo "✅ Version is not a snapshot: $VERSION - will publish"
            echo "should_publish=true" >> $GITHUB_OUTPUT
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - uses: s4u/maven-settings-action@v4.0.0
        with:
          servers: |
            [{
              "id": "central",
              "username": "${{ secrets.OSSRH_USERNAME }}",
              "password": "${{ secrets.OSSRH_PASSWORD }}"
            },
            {
              "id": "ossrh-staging-api",
              "username": "${{ secrets.OSSRH_USERNAME }}",
              "password": "${{ secrets.OSSRH_PASSWORD }}"
            }]

      - name: Import GPG key
        if: steps.version-check.outputs.should_publish == 'true'
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}
          git_user_signingkey: true
          git_commit_gpgsign: true

      - name: Build
        if: steps.version-check.outputs.should_publish == 'false'
        run: >
          ./mvnw verify
          -Dci.buildNumber=$GITHUB_RUN_NUMBER
          -U -B $MAVEN_OPTS

      - name: Build & Deploy
        if: steps.version-check.outputs.should_publish == 'true'
        run: >
          ./mvnw deploy
          -Dci.buildNumber=$GITHUB_RUN_NUMBER
          -U -B -Prelease,release-central,gpg $MAVEN_OPTS

      - name: Build Image
        run: ./scripts/docker_build ${{ steps.version-check.outputs.version }}

      - name: Upload Image
        run: ./scripts/docker_push ${{ steps.version-check.outputs.version }}
        env:
          DOCKER_USER: ${{ secrets.DOCKER_USER }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

      - name: Install tools
        if: steps.version-check.outputs.should_publish == 'true'
        run: |
          git config --global user.email "ci@example.com"
          git config --global user.name "CI Server"

      - name: Site
        if: steps.version-check.outputs.should_publish == 'true'
        run: >
          ./mvnw post-integration-test site scm-publish:publish-scm
          -DsurefireArgs=-Dspring.profiles.active=TEST
          -Dargs=-Dspring.profiles.active=TEST
          -Dscmpublish.pubScmUrl=scm:git:https://openwms:$PUSHKEY@github.com/spring-labs/org.openwms.services.git
          -DdeveloperConnectionUrl=scm:git:https://openwms:$PUSHKEY@github.com/spring-labs/org.openwms.services.git
          -Dci.buildNumber=$GITHUB_RUN_NUMBER
          -Prelease,coverage -B $MAVEN_OPTS
        env:
          PUSHKEY: ${{ secrets.GITHUB_TOKEN }}
